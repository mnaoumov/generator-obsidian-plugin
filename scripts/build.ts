import type { BuildOptions } from 'esbuild';

import { context } from 'esbuild';
import {
  CliTaskResult,
  wrapCliTask
} from 'obsidian-dev-utils/ScriptUtils/CliUtils';

await wrapCliTask(async () => {
  const buildOptions: BuildOptions = {
    banner: {
      js: '/* THIS IS A GENERATED/BUNDLED FILE BY ESBUILD */\nimport { createRequire } from \'module\';\nconst require = createRequire(import.meta.url);'
    },
    bundle: true,
    entryPoints: ['src/index.ts'],
    external: [
      'chalk',
      'semver',
      'yeoman-generator',
      'yosay'
    ],
    format: 'esm',
    logLevel: 'info',
    outdir: 'generators/app',
    platform: 'node',
    sourcemap: 'inline',
    target: 'ESNext',
    treeShaking: true
  };

  const buildContext = await context(buildOptions);
  const result = await buildContext.rebuild();
  const isSuccess = result.errors.length === 0 && result.warnings.length === 0;
  return CliTaskResult.Success(isSuccess);
});
